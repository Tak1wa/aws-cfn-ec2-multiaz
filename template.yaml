AWSTemplateFormatVersion: 2010-09-09
Description: ---
Parameters: 
  VpcCidr:
    Type: String
    Default: 10.1.0.0/16
  PrivateSubnet1Cidr:
    Type: String
    Default: 10.1.10.0/24
  PrivateSubnet2Cidr:
    Type: String
    Default: 10.1.11.0/24
  PrivateSubnet3Cidr:
    Type: String
    Default: 10.1.12.0/24
  Amzn2Latest:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-kernel-5.10-hvm-x86_64-gp2
Resources: 
  ######################
  # Network
  ######################
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-vpc
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, "Fn::GetAZs": {Ref: "AWS::Region"}]
      CidrBlock: !Ref PrivateSubnet1Cidr
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-private-1a-subnet
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 1, "Fn::GetAZs": {Ref: "AWS::Region"}]
      CidrBlock: !Ref PrivateSubnet2Cidr
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-private-1c-subnet
  PrivateSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 2, "Fn::GetAZs": {Ref: "AWS::Region"}]
      CidrBlock: !Ref PrivateSubnet3Cidr
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-private-1d-subnet

  ######################
  # Virtual Machine
  ######################
  WebServer1:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t3.small
      SubnetId: !Ref PrivateSubnet1
      ImageId: !Ref Amzn2Latest
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-web-a
  WebServer2:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t3.small
      SubnetId: !Ref PrivateSubnet2
      ImageId: !Ref Amzn2Latest
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-web-c
  WebServer3:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t3.small
      SubnetId: !Ref PrivateSubnet3
      ImageId: !Ref Amzn2Latest
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-web-d
  ApServer1:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t3.small
      SubnetId: !Ref PrivateSubnet1
      ImageId: !Ref Amzn2Latest
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-ap-a
  ApServer2:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t3.small
      SubnetId: !Ref PrivateSubnet2
      ImageId: !Ref Amzn2Latest
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-ap-c
  ApServer3:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t3.small
      SubnetId: !Ref PrivateSubnet3
      ImageId: !Ref Amzn2Latest
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-ap-d
